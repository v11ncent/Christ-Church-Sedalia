---
interface Props {
  variant?: "inverted" | "no-decoration" | "inner";
}

const { variant = "" } = Astro.props;
---

{
  () => {
    if (variant === "inverted") {
      return (
        <header class="section-header inverted">
          <slot />
        </header>
      );
    } else if (variant === "no-decoration") {
      return (
        <header class="section-header no-decoration">
          <slot />
        </header>
      );
    } else if (variant === "inner") {
      return (
        <header class="section-header inner">
          <slot />
        </header>
      );
    } else {
      return (
        <header class="section-header decoration">
          <slot />
        </header>
      );
    }
  }
}

<style lang="scss">
  @use "../styles/tokens/tokens" as t;

  header {
    position: relative;
    z-index: 2;
    max-width: fit-content;
    margin-bottom: 1.5rem;
    font-size: t.$fs-heading;
    font-family: t.$ff-heading;
    text-transform: capitalize;

    &.decoration::after {
      position: absolute;
      content: "";
      z-index: -1;
      top: 50%;
      right: 0;
      transform: translate(75%, -50%);
      width: 3rem;
      height: 3rem;
      background: center / 40% no-repeat url("../assets/cross-decoration.svg")
        t.$clr-tan;
      border-radius: 100%;
    }

    &.inverted::after {
      position: absolute;
      content: "";
      z-index: -1;
      top: 50%;
      right: 0;
      transform: translate(75%, -50%);
      width: 3rem;
      height: 3rem;
      background: center / 40% no-repeat
        url("../assets/cross-decoration-inverted.svg") white;
      border-radius: 100%;
    }
  }

  .inner {
    font-size: 2rem;
    margin-bottom: 1rem;
  }
</style>
