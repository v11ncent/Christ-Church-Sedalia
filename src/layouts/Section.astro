---
interface Props {
  variant?: "paper" | "paper-with-slope" | string;
  id?: string;
}
const { variant = "", id } = Astro.props;
---

{
  () => {
    if (variant === "paper") {
      return (
        <section id={id} class="paper">
          <div class="rip" />
          <div class="inner">
            <slot />
          </div>
          <div class="rip" />
        </section>
      );
    } else if (variant === "paper-with-slope") {
      return (
        <section id={id} class="paper-with-slope">
          <div class="slope" />
          <div class="inner">
            <slot />
          </div>
          <div class="slope" />
        </section>
      );
    } else {
      return (
        <section id={id} class="generic">
          <slot />
        </section>
      );
    }
  }
}

<style lang="scss">
  @use "../styles/tokens/tokens" as t;
  $rip-height: 2rem;
  $slope-height: t.$h-paper-slope;

  .generic {
    padding: t.$pd-section;
  }

  .inner {
    padding: t.$pd-section;
    background: center / cover url("../assets/paper-background.png") t.$clr-tan;
  }

  .rip {
    width: 100%;
    height: $rip-height;
    background: center / cover url("../assets/paper.png");

    &:last-of-type {
      transform: rotate(180deg);
    }
  }

  .paper-with-slope {
    position: relative;
  }

  .slope {
    position: absolute;
    left: 0;
    width: 100%;
    height: $slope-height;
    background: center / cover url("../assets/paper-slope.png");
  }

  .slope:first-of-type {
    top: 0;
    background: center / cover url("../assets/paper-slope.png");
    transform: translate(0, -95%) rotate(180deg);
  }

  .slope:last-of-type {
    bottom: 0;
    background: center / cover url("../assets/paper-slope.png");
    transform: translate(0, 95%);
  }
</style>
