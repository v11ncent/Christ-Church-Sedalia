---
interface Props {
  variant?: "paper" | "paper-with-slope" | string;
  id?: string;
}
const { variant = "", id } = Astro.props;
---

{
  () => {
    if (variant === "paper") {
      return (
        <section id={id} class="paper">
          <slot />
        </section>
      );
    } else if (variant === "paper-with-slope") {
      return (
        <section id={id} class="paper-with-slope">
          <slot />
        </section>
      );
    } else {
      return (
        <section id={id}>
          <slot />
        </section>
      );
    }
  }
}

<style lang="scss">
  @use "../styles/tokens/tokens" as t;

  section {
    padding: t.$pd-section;
  }

  .paper,
  .paper-with-slope {
    position: relative;
    background: center / cover url("../assets/paper-background.png") t.$clr-tan;
  }

  .paper::before,
  .paper::after {
    position: absolute;
    content: "";
    left: 0;
    right: 0;
    width: 100%;
    height: 100%;
    max-height: 2rem;
  }

  .paper::before {
    top: 0;
    transform: translate(0, -95%);
    background: center / cover no-repeat url("../assets/paper.png");
  }

  .paper::after {
    bottom: 0;
    transform: translate(0, 95%);
    background: center / cover no-repeat url("../assets/paper.png");
    transform: translate(0px, 100%) rotate(180deg);
  }

  .paper-with-slope::before,
  .paper-with-slope::after {
    position: absolute;
    content: "";
    left: 0;
    right: 0;
    width: 100%;
    height: 100%;
    max-height: 5rem;
  }

  .paper-with-slope::before {
    top: 0;
    transform: translate(0, -95%);
    background: center / cover no-repeat url("../assets/paper-slope.png");
  }

  .paper-with-slope::after {
    bottom: 0;
    transform: translate(0, 95%);
    background: center / cover no-repeat url("../assets/paper-slope.png");
    transform: translate(0px, 100%) rotate(180deg);
  }
</style>
